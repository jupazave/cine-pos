FORMAT: 1A
HOST: http://cinepos.app/api/v1

# Escena Descubierta

Escena Descubierta implements REST API using JSON.
API will allow external apps (like JS frameworks) to interact with Escena Descubierta.

# Host

# Versioning

The version number of the API is added in the URL. The current version is `v1`.

Example: `http://cinepos.app/api/v1/events/123` 

# Pagination

Requests that return multiple items will be paginated to 10 items by default. You can specify further pages with the `?page` parameter and set a custom page size with the `?limit` parameter.
        
# HTTP Response Codes

The API can answer with the following HTTP codes. Only 20x codes are successfull responses. 40x and 50x responses are error responses and the API consumer must deal with them.

## Success responses

<table>
<tr><td>200 OK</td><td>The request was successful.</td></tr>
<tr><td>201 Created</td><td>The request was successful and a new resource was created.</td></tr>
<tr><td>202 Accepted</td><td>Asynchrnous task. Job resource is returned.</td></tr>
<tr><td>204 No Content</td><td>The request was successful but there is nothing to return. Usually response of DELETE requests.</td></tr>
</table>

## Error responses

<table>
<tr><td>400 Bad Request</td><td>The request was invalid. Usually caused by invalid input data (missing arguments, invalid arguments values, etc.). Cause of error is described in response.</td></tr>
<tr><td>401 Unauthorized</td><td>Authentication failed.</td></tr>
<tr><td>403 Forbidden</td><td>You don't have access to resource.</td></tr>
<tr><td>404 Not Found</td><td>You're asking for something that doesn't exist.</td></tr>
<tr><td>405 Method not allowed</td><td>You don't have access to this method.</td></tr>
<tr><td>422 Unprocessable Entity</td><td> The server understands the content type of the request entity but there is a format error.</td></tr>
<tr><td>500 Internal Server Error</td><td>Something went wrong. We are sorry, it is our fault and we will make our best to fix it!</td></tr>
<tr><td>503 Temporary Unavailable</td><td>This response is typically returned when system is under maintenance. Maintenance reason and expected maintenance ent time are also returned in response. </td></tr>
</table>


# Authentication

All requests, except `[POST] /api/v1/auth/login` and `[POST] /api/v1/auth/signin`, requires to be authenticated.

An unauthorized request receives a `401` response with the following body:


    {
        "error": "unauthorized",
        "error_description": "This request needs a valid authorization token"
    }

# Group Sign in

### POST /login

The login in process is compliant with [RFC 6749 (OAuth 2.0)](http://tools.ietf.org/html/rfc6749), in particular with _4.3 "Resource Owner Password Credentials Grant"._ The caller must provide username and password and the API will return the access token (see [RFC 6749, section 5.1 "Successful Response"](http://tools.ietf.org/html/rfc6749#section-5.1)) or an error if something goes bad (see [RFC 6749, section 5.2 "Error Response"](http://tools.ietf.org/html/rfc6749#section-5.1))

The returned token is _bearer_ token (defined in [RFC6750](http://tools.ietf.org/html/rfc6750)) and it must be used to authenticate the client in every subsequent request, including the token in the request header:

    GET /resource/1 HTTP/1.1
    Host: cinepos.app
    Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzY290Y2guaW8iLCJleHAiOjEzMDA4MTkzODAsIm5hbWUiOiJDaHJpcyBTZXZpbGxlamEiLCJhZG1pbiI6dHJ1ZX0.03f329983b86f7d9a9f5fef85305880101d5e302afafa20154d094b229f75773


### Successfull response

* **token:** The token (string)
* **expires_in:** [optional] The token validity (in seconds). The default validity is 7 days (604800 seconds)

### Error response

* **error:** If the response code is different from 20x, this field contains the error message. See [RFC 6749, section 5.2 "Error Response"](http://tools.ietf.org/html/rfc6749#section-5.2) for details
* **error_description:** [optional] A human-readable error message explaining what happened

Error responses are compliant with [RFC 6749, section 5.2 "Error response"](http://tools.ietf.org/html/rfc6749#section-5.2).
These are the possible values of the _error_ field and their meaning:

* **invalid_request:** The request is missing a required parameter, includes an unsupported parameter value (other than grant type), repeats a parameter, includes multiple credentials, utilizes more than one mechanism for authenticating the client, or is otherwise malformed.
* **invalid_client:** The provided credentials ( _email_ and _password_ ) are invalid or wrong. The client can't be authorized.

+ Request (application/json)

        {
            "email": "user@mail.com",
            "password": "sekret"
        }

+ Response 200 (application/json)

        {
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzY290Y2guaW8iLCJleHAiOjEzMDA4MTkzODAsIm5hbWUiOiJDaHJpcyBTZXZpbGxlamEiLCJhZG1pbiI6dHJ1ZX0.03f329983b86f7d9a9f5fef85305880101d5e302afafa20154d094b229f75773", 
            "expires_in": 10800
        }

+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }
        
+ Response 401 (application/json)

        {
            "error": "invalid_credentials",
            "error_description": "Wrong credentials"
        }

+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }

### POST /signup

The sign up process is compliant with [RFC 6749 (OAuth 2.0)](http://tools.ietf.org/html/rfc6749), in particular with _4.3 "Resource Owner Password Credentials Grant"._ The caller must provide username, password and profile information and the API will return the access token (see [RFC 6749, section 5.1 "Successful Response"](http://tools.ietf.org/html/rfc6749#section-5.1)) or an error if something goes bad (see [RFC 6749, section 5.2 "Error Response"](http://tools.ietf.org/html/rfc6749#section-5.1))

The returned token is _bearer_ token (defined in [RFC6750](http://tools.ietf.org/html/rfc6750)) and it must be used to authenticate the client in every subsequent request, including the token in the request header:

    GET /resource/1 HTTP/1.1
    Host: example.com
    Authorization: Bearer mF_9.B5f-4.1JqM

### Successfull response

* **token:** The token (string)
* **expires_in:** [optional] The token validity (in seconds). The default validity is 7 days (604800 seconds)

### Error response

* **error:** If the response code is different from 20x, this field contains the error message. See [RFC 6749, section 5.2 "Error Response"](http://tools.ietf.org/html/rfc6749#section-5.2) for details
* **error_description:** [optional] A human-readable error message explaining what happened

Error responses are compliant with [RFC 6749, section 5.2 "Error response"](http://tools.ietf.org/html/rfc6749#section-5.2).
These are the possible values of the _error_ field and their meaning:

* **invalid_request:** The request is missing a required parameter, includes an unsupported parameter value (other than grant type), repeats a parameter, includes multiple credentials, utilizes more than one mechanism for authenticating the client, or is otherwise malformed.
* **invalid_client:** The provided credentials ( _email_ and _password_ ) are invalid or wrong. The client can't be authorized.

+ Request (application/json)

        {
            
            "username": "user",
            "email": "user@gmail.com",
            "password": "sekret",
            "first_name": "John",
            "last_name": "Doe",
            "zipcode": "97000",
            "city": "Merida",
            "country": "Yuc"

        }

+ Response 200 (application/json)

        {
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzY290Y2guaW8iLCJleHAiOjEzMDA4MTkzODAsIm5hbWUiOiJDaHJpcyBTZXZpbGxlamEiLCJhZG1pbiI6dHJ1ZX0.03f329983b86f7d9a9f5fef85305880101d5e302afafa20154d094b229f75773", 
            "expires_in": 10800
        }

+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }

# Group Theater

## Theater Collection [/theater?page=1]

Collection of all Theaters

### List all Theaters [GET]

+ Parameters
    + page (required, number, `1`) ... The page number you want to get.
    + limit (optional, number, `10`) ... Number of results to be returned per page.

+ Response 200 (application/json)

        
        {
            "total": 5,
            "per_page": 2,
            "current_page": 1,
            "last_page": 3,
            "next_page_url": null,
            "prev_page_url": null,
            "from": 1,
            "to": 2,
            "data": [
                {
                    "id": 1, 
                    "name": "Armando Manzanero",
                    "description": "The big one",
                    "address": "Calle 64 #495",
                    "zip_code": "97000",
                    "city": "Mérida",
                    "country": "México",
                    "email": "test@test.com",
                    "facebook": "/armando.manzanero",
                    "instagram": "armando_manzanero",
                    "twitter": "@amanzanero",
                    "webpage": "www.teatroarmandomanzanero.com",
                    "profile_picture": "/manzanero.jpg",
                    "user_id": "24"
                    "created_at": "2017-02-01 17:09:07",
                    "updated_at": "2017-04-14 13:47:01"
                }, 
                {
                    "id": 2, 
                    "name": "Armando Manzanero",
                    "description": "The big one",
                    "address": "Calle 64 #495",
                    "zip_code": "97000",
                    "city": "Mérida",
                    "country": "México",
                    "email": "test@test.com",
                    "facebook": "/armando.manzanero",
                    "instagram": "armando_manzanero",
                    "twitter": "@amanzanero",
                    "webpage": "www.teatroarmandomanzanero.com",
                    "profile_picture": "/manzanero.jpg",
                    "user_id": "23"
                    "created_at": "2017-02-01 17:09:07",
                    "updated_at": "2017-04-14 13:47:01"
                }
            ]
        }

+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }

### Create a Theater [POST]
+ Request (application/json)
    + Headers 

          Accept: application/json
    
    + Body

        {
            "name": "Armando Manzanero",
            "description": "The big one",
            "address": "Calle 64 #495",
            "zip_code": "97000",
            "city": "Mérida",
            "country": "México",
            "email": "test@test.com",
            "facebook": "/armando.manzanero",
            "instagram": "armando_manzanero",
            "twitter": "@amanzanero",
            "webpage": "www.teatroarmandomanzanero.com",
            "profile_picture": "/manzanero.jpg",
            "user_id": "24"
        }

+ Response 201 (application/json)

        {
            "id": 3, 
            "name": "Armando Manzanero",
            "description": "The big one",
            "address": "Calle 64 #495",
            "zip_code": "97000",
            "city": "Mérida",
            "country": "México",
            "email": "test@test.com",
            "facebook": "/armando.manzanero",
            "instagram": "armando_manzanero",
            "twitter": "@amanzanero",
            "webpage": "www.teatroarmandomanzanero.com",
            "profile_picture": "/manzanero.jpg",
            "user_id": "24"
            "created_at": "2017-02-01 17:09:07",
            "updated_at": "2017-04-14 13:47:01"
        }
        
+ Response 422 (application/json)
        [
          "The name has already been taken."
        ]
        
+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }

## Theater [/theater/{id}]
A single Theater object with all its details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Theater to perform action with
    
+ Model (application/json)

    JSON representation of the Theater
    
    + Body

            {
                "id": 1, 
                "name": "Armando Manzanero",
                "description": "The big one",
                "address": "Calle 64 #495",
                "zip_code": "97000",
                "city": "Mérida",
                "country": "México",
                "email": "test@test.com",
                "facebook": "/armando.manzanero",
                "instagram": "armando_manzanero",
                "twitter": "@amanzanero",
                "webpage": "www.teatroarmandomanzanero.com",
                "profile_picture": "/manzanero.jpg",
                "user_id": "24",
                "created_at": "2017-02-01 17:09:07",
                "updated_at": "2017-04-14 13:47:01"
            }
            
### Retrieve a Theater [GET]

+ Response 200 (application/json)

    [Theater][]

+ Response 404 (application/json)   

    + Body
    
            { 
                "error": "not_found",
                "error_message": "The requested resource was not found"
            }
            
+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }

### Update a Theater [PATCH]
+ Request (application/json)
    + Headers
    
        Accept: application/json
        
    + Body

        {
            "name": "José Peón Contreras",
        }

+ Response 201 (application/json)

    [Theater][]
    
+ Response 404 (application/json)   

    + Body
    
            { 
                "error": "not_found",
                "error_message": "The requested resource was not found"
            }
    
+ Response 422 (application/json)
        [
          "The name has already been taken."
        ]
        
+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }

### Remove a Theater [DELETE]
+ Response 204

+ Response 404 (application/json)   

    + Body
    
            { 
                "error": "not_found",
                "error_message": "The requested resource was not found"
            }

+ Response 405 (application/json)   

    + Body
    
            { 
                "error": "not_found",
                "error_message": "You don't have access to this method"
            }

+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }

# Group Event

## Events Collection [/events]
Collection of all Events of a theater

### List all Events [GET]

+ Parameters
    + page (required, number, `1`) ... The page number you want to get.
    + limit (optional, number, `10`) ... Number of results to be returned per page.

+ Response 200 (application/json)

        {
            "total": 5,
            "per_page": 2,
            "current_page": 1,
            "last_page": 3,
            "next_page_url": null,
            "prev_page_url": null,
            "from": 1,
            "to": 2,
            "data": [
                {
                    "id": 1, 
                    "name": "El Rey León",
                    "description": "El rey león es un musical basado en la película homónima de Disney de 1994, con libreto de Roger Allers e Irene Mecchi, canciones de Elton John y Tim Rice, y música adicional de Lebo M, Mark Mancina, Jay Rifkin, Julie Taymor y Hans Zimmer.",
                    "dramaturgic": "El veloz muerciélago mono",
                    "cast": "Jorge Lau, Fela Domínguez",
                    "director": "Julie Taymor",
                    "email": "test@test.com",
                    "facebook": "/rey.leon",
                    "instagram": "",
                    "twitter": "",
                    "webpage": "",
                    "profile_picture": "rey.leon.jpg",
                    "category_id": "1",
                    "user_id": "34",
                    "start_date": "2017-02-20 17:09:07",
                    "end_date": "2017-02-20 17:09:07",
                    "created_at": "2017-02-01 17:09:07",
                    "updated_at": "2017-04-14 13:47:01"
                }, 
                {
                    "id": 1, 
                    "name": "Orquesta Sinfónica de Yucatán, Programa 10",
                    "description": "Los famosos hermanos Arón y Álvaro Bitrán, miembros del Cuarteto Latinoamericano, regresan a Mérida como solistas del doble concierto de Johannes Brahms.",
                    "dramaturgic": "El veloz muerciélago mono",
                    "cast": "Arón Bitrán, Alvaro Bitrán",
                    "director": "Juan Carlos Lomónaco",
                    "email": "test@test.com",
                    "facebook": "/orquesta.yucatan",
                    "instagram": "",
                    "twitter": "",
                    "webpage": "",
                    "profile_picture": "Orquesta.jpg",
                    "category_id": "1",
                    "user_id": "34",
                    "start_date": "2017-02-20 17:09:07",
                    "end_date": "2017-02-20 17:09:07",
                    "created_at": "2017-02-01 17:09:07",
                    "updated_at": "2017-04-14 13:47:01"
                }
            ]
        }
        
+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }

### Create an Event [POST]
+ Request (application/json)

        {
            "name": "El Rey León",
            "description": "El rey león es un musical basado en la película homónima de Disney de 1994, con libreto de Roger Allers e Irene Mecchi, canciones de Elton John y Tim Rice, y música adicional de Lebo M, Mark Mancina, Jay Rifkin, Julie Taymor y Hans Zimmer.",
            "stage_id": 1,
            "dramaturgic": "El veloz murcielago",
            "cast": "Jorge Lau, Fela Domínguez",
            "director": "Julie Taymor",
            "start_date": "2017-02-20 17:09:07",
            "end_date": "2017-02-20 17:09:07"
        }

+ Response 201 (application/json)

        {
            "id": 1, 
            "name": "El Rey León",
            "description": "El rey león es un musical basado en la película homónima de Disney de 1994, con libreto de Roger Allers e Irene Mecchi, canciones de Elton John y Tim Rice, y música adicional de Lebo M, Mark Mancina, Jay Rifkin, Julie Taymor y Hans Zimmer.",
            "dramaturgic": "El veloz muerciélago mono",
            "cast": "Jorge Lau, Fela Domínguez",
            "director": "Julie Taymor",
            "email": "test@test.com",
            "facebook": "/rey.leon",
            "instagram": "",
            "twitter": "",
            "webpage": "",
            "profile_picture": "rey.leon.jpg",
            "category_id": "1",
            "user_id": "34",
            "start_date": "2017-02-20 17:09:07",
            "end_date": "2017-02-20 17:09:07",
            "created_at": "2017-02-01 17:09:07",
            "updated_at": "2017-04-14 13:47:01"
        }
        
+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }

## Event [/events/{id}]
A single Event object with all its details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Event to perform the action

+ Model (application/json)

    JSON representation of the Theater
    
    + Body

            {
                "id": 1, 
                "name": "El Rey León",
                "description": "El rey león es un musical basado en la película homónima de Disney de 1994, con libreto de Roger Allers e Irene Mecchi, canciones de Elton John y Tim Rice, y música adicional de Lebo M, Mark Mancina, Jay Rifkin, Julie Taymor y Hans Zimmer.",
                "dramaturgic": "El veloz muerciélago mono",
                "cast": "Jorge Lau, Fela Domínguez",
                "director": "Julie Taymor",
                "email": "test@test.com",
                "facebook": "/rey.leon",
                "instagram": "",
                "twitter": "",
                "webpage": "",
                "profile_picture": "rey.leon.jpg",
                "category_id": "1",
                "user_id": "34",
                "start_date": "2017-02-20 17:09:07",
                "end_date": "2017-02-20 17:09:07",
                "created_at": "2017-02-01 17:09:07",
                "updated_at": "2017-04-14 13:47:01"
            }
            
+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }
            
### Retrieve an Event [GET]

+ Response 200 (application/json)

    [Event][]

+ Response 404 (application/json)   

    + Body
    
            { 
                "error": "not_found",
                "error_description": "The requested resource was not found"
            }
            
+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }

### Update an Event [PATCH]
+ Request (application/json)

        {
            "id": 1, 
            "name": "El Rey León",
            "description": "El rey león es un musical basado en la película homónima de Disney de 1994, con libreto de Roger Allers e Irene Mecchi, canciones de Elton John y Tim Rice, y música adicional de Lebo M, Mark Mancina, Jay Rifkin, Julie Taymor y Hans Zimmer.",
            "cast": "Jorge Lau, Fela Domínguez",
            "director": "Julie Taymor",
            "start_date": "2017-02-20 17:09:07",
            "end_date": "2017-02-20 17:09:07"
        }

+ Response 201 (application/json)

    [Event][]
    
+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }
        
### Remove an Event [DELETE]
+ Response 204

+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }


# Group Reviews

## Schedules Collection [/events/{event_id}/reviews]
Collection of all reviews of an event

### List all Reviews [GET]

+ Parameters
    + page (required, number, `1`) ... The page number you want to get.
    + limit (optional, number, `10`) ... Number of results to be returned per page.

+ Response 200 (application/json)

        {
            "total": 5,
            "per_page": 2,
            "current_page": 1,
            "last_page": 3,
            "next_page_url": null,
            "prev_page_url": null,
            "from": 1,
            "to": 2,
            "data": [
                {
                    "id": 1, 
                    "event_id": 1,
                    "score": 5,
                    "name":"Joshua Flores Tuz",
                    "description": "Excelente actuación"
                    "created_at": "2017-02-01 17:09:07",
                    "updated_at": "2017-04-14 13:47:01"
                }, 
                {
                    "id": 1, 
                    "event_id": 1,
                    "score": 5,
                    "name":"Joshua Flores Tuz",
                    "description": "Excelente actuación"
                    "created_at": "2017-02-01 17:09:07",
                    "updated_at": "2017-04-14 13:47:01"
                }
            ]
        }

+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }

### Create a Review [POST]
+ Request (application/json)

        {
            "event_id": 1,
            "score": 5,
            "description": "Excelente actuación"
        }

+ Response 201 (application/json)

        {
            "id": 1, 
            "event_id": 1,
            "score": 5,
            "name":"Joshua Flores Tuz",
            "description": "Excelente actuación"
            "created_at": "2017-02-01 17:09:07",
            "updated_at": "2017-04-14 13:47:01"
        }
        
+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }

## Review [/event/{event_id}/review/{review_id}]
A single Review object with all its details

+ Parameters
    + event_id (required, number, `1`) ... Numeric `id` of the event to perform the action
    + review_id (required, number, `1`) ... Numeric `id` of the review to perform the action

+ Model (application/json)

    JSON representation of the Review
    
    + Body

            {
                "id": 1, 
                "event_id": 1,
                "score": 5,
                "name":"Joshua Flores Tuz",
                "description": "Excelente actuación"
                "created_at": "2017-02-01 17:09:07",
                "updated_at": "2017-04-14 13:47:01"
            }
            
### Retrieve a Review [GET]

+ Response 200 (application/json)

    [Review][]

+ Response 404 (application/json)   

    + Body
    
            { 
                "error": "not_found",
                "error_description": "The requested resource was not found"
            }
            
+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }
        
### Remove a Review [DELETE]
Logged user must have rol admi

+ Response 204

+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }

# Group Categories

## Categories Collection [/categories/]
Collection of all categories

### List all Categories [GET]

+ Parameters
    + page (required, number, `1`) ... The page number you want to get.
    + limit (optional, number, `10`) ... Number of results to be returned per page.

+ Response 200 (application/json)

        {
            "total": 5,
            "per_page": 2,
            "current_page": 1,
            "last_page": 3,
            "next_page_url": null,
            "prev_page_url": null,
            "from": 1,
            "to": 2,
            "data": [
                {
                    "id": 1, 
                    "name": "Regional",
                    "description": "Horror",
                    "created_at": "2017-02-01 17:09:07",
                    "updated_at": "2017-04-14 13:47:01"
                }, 
                {
                    "id": 2, 
                    "name": "Adaptación",
                    "description": "Fantasía",
                    "created_at": "2017-02-01 17:09:07",
                    "updated_at": "2017-04-14 13:47:01"
                }
            ]
        }
        
+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }

### Create a Category [POST]
+ Request (application/json)

        {
            "name": "Regional"
        }

+ Response 201 (application/json)

        {
            "id": 1, 
            "name": "Regional",
            "description": "Fantasía",
            "created_at": "2017-02-01 17:09:07",
            "updated_at": "2017-04-14 13:47:01"
        }
        
+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }

## Category [/category/{category_id}]
A single Category object with all its details

+ Parameters
    + category_id (required, number, `1`) ... Numeric `id` of the category to perform the action

+ Model (application/json)

    JSON representation of the Category
    
    + Body

            {
                "id": 1, 
                "name": "Regional",
                "description": "Fantasía",
                "created_at": "2017-02-01 17:09:07",
                "updated_at": "2017-04-14 13:47:01"
            }
            
### Retrieve a Category [GET]

+ Response 200 (application/json)

    [Category][]

+ Response 404 (application/json)   

    + Body
    
            { 
                "error": "not_found",
                "error_description": "The requested resource was not found"
            }
            
+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }

### Update a Category [PATCH]
+ Request (application/json)

        {
            "id": 1, 
            "name": "Comedia"
        }

+ Response 201 (application/json)

    [Category][]
    
+ Response 400 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }


+ Response 500 (application/json)

        {
            "error": ""
            "error_description": "an error occurred on the server"
        }
        
### Remove a Category [DELETE]
+ Response 204

# Group Schedules

## Schedules Collection by Theater [/theater/{theater_id}/schedule]
Collection of all Schedule of a theater

### List all Schedules from a Theater [GET]

+ Parameters
    + theater_id (required, number, `1`) ... The theater id you want to get.
    + page (optional, number, `1`) ... The page number you want to get.
    + limit (optional, number, `10`) ... Number of results to be returned per page.

+ Response 200 (application/json)

        {
            "total": 5,
            "per_page": 2,
            "current_page": 1,
            "last_page": 3,
            "next_page_url": null,
            "prev_page_url": null,
            "from": 1,
            "to": 2,
            "data": [
                {
                    "id": 1, 
                    "event_id": 1,
                    "theater_id": 2,
                    "stage": "Salón Principal",
                    "start_date": "2017-02-20 17:09:07",
                    "end_date": "2017-02-20 17:09:07",
                    "created_at": "2017-02-01 17:09:07",
                    "updated_at": "2017-04-14 13:47:01"
                }, 
                {
                    "id": 1, 
                    "event_id": 1,
                    "theater_id": 2,
                    "stage": "Salón Principal",
                    "start_date": "2017-02-20 17:09:07",
                    "end_date": "2017-02-20 17:09:07",
                    "created_at": "2017-02-01 17:09:07",
                    "updated_at": "2017-04-14 13:47:01"
                }
            ]
        }

## Schedules Collection [/schedules/]
Collection of all schedules

### List all Schedules [GET]

+ Parameters
    + page (required, number, `1`) ... The page number you want to get.
    + category_id (optional, number, `1`) ... The category id number you want to get.
    + startDate: `Y-m-d H:i:s` (optional, string) ... The min date to filter the events requested.
    + endDate: `Y-m-d H:i:s` (optional, string) ... The max date to filter the events requested.

+ Response 200 (application/json)

        {
            "error": "invalid_request",
            "error_description": "A required parameter is missing or the request is malformed"
        }

### Create a Schedule [POST]
+ Request (application/json)

        {
            "event_id": 2,
            "theater_id": 2,
            "stage": "Salón Principal",
            "start_date": "2017-09-24 20:09:07",
            "end_date": "2017-09-24 22:09:09"
        }

+ Response 201 (application/json)

        {
            "id": 101
            "event_id": 2,
            "theater_id": 2,
            "stage": "Salón Principal",
            "start_date": "2017-09-24 20:09:07",
            "end_date": "2017-09-24 22:09:09",
            "updated_at": "2017-05-23 04:08:51",
            "created_at": "2017-05-23 04:08:51",
        }

## Schedule [/schedule/{schedule_id}]
A single Schedule object with all its details

+ Parameters
    + schedule_id (required, number, `1`) ... Numeric `id` of the schedule to perform the action

+ Model (application/json)

    JSON representation of the Schedule
    
    + Body

            {
                {
                    "id": 1,
                    "stage": "ut",
                    "start_date": "2017-04-26 05:13:45",
                    "end_date": "2017-04-26 05:13:45",
                    "event_id": 22,
                    "theater_id": 18,
                    "created_at": "2017-05-23 04:05:26",
                    "updated_at": "2017-05-23 04:05:26",
                    "event": {
                        "id": 22,
                        "name": "CHAPTER VI. Pig and Pepper For a minute or two to think about it, even if my head would go.",
                        "description": "Then she went nearer to watch them, and then turned to the puppy; whereupon the puppy made another snatch in the pool, 'and she sits purring so nicely by the carrier,' she thought; 'and how funny.",
                        "dramaturgic": "Mrs. Annamarie Morar II",
                        "director": "Iliana Tremblay Jr.",
                        "cast": "Ms. Virginie Wiza,Ms. Wilhelmine Schiller,Leo Zulauf,Gloria Lubowitz,Anabel Lesch,Sherwood Bahringer",
                        "email": "orville.abernathy@cruickshank.com",
                        "facebook": "http://smitham.com/aut-ut-et-voluptatem-quod-pariatur",
                        "instagram": "http://smitham.com/ab-dolores-eius-maxime-deleniti-qui-voluptas-est.html",
                        "twitter": "http://glover.com/",
                        "webpage": "http://gerhold.com/ea-qui-quisquam-vitae-quaerat-ullam-molestiae-voluptatem",
                        "profile_picture": "http://lorempixel.com/640/480/?37124",
                        "category_id": 2,
                        "user_id": 3,
                        "created_at": "2017-05-23 04:05:23",
                        "updated_at": "2017-05-23 04:05:23"
                    },
                    "theater": {
                        "id": 18,
                        "name": "Would the fall was over. Alice was thoroughly puzzled. 'Does the boots and shoes!' she repeated in.",
                        "description": "White Rabbit hurried by--the frightened Mouse splashed his way through the wood. 'It's the Cheshire Cat, she was ready to agree to everything that was lying under the hedge. In another moment down.",
                        "address": "185 Littel Hills\nLemkebury, OK 76800-2570",
                        "zip_code": "43601",
                        "city": "New Gageside",
                        "country": "Burkina Faso",
                        "phone": "1-541-830-0929 x05312",
                        "email": "uschneider@baumbach.com",
                        "facebook": "http://www.schuster.com/sint-quia-ratione-a-sequi-rerum-animi-numquam-consectetur.html",
                        "instagram": "http://www.carroll.net/hic-repellat-dolorum-dolor-et-aspernatur-hic-facilis-eius.html",
                        "twitter": "http://www.hilpert.biz/nemo-eius-est-expedita-cupiditate-non",
                        "webpage": "http://luettgen.com/",
                        "profile_picture": "http://lorempixel.com/640/480/?50158",
                        "user_id": 7,
                        "created_at": "2017-05-23 04:05:22",
                        "updated_at": "2017-05-23 04:05:22"
                    }
                }
            }
            
### Retrieve a Schedule [GET]

+ Response 200 (application/json)

    [Schedule][]

+ Response 404 (application/json)   

    + Body
    
            { 
                "error": "not_found",
                "error_description": "The requested resource was not found"
            }

### Update a Schedule [PUT]
+ Request (application/json)

        {
            "id": 1, 
            "name": "Comedia"
        }

+ Response 201 (application/json)

    [Schedule][]
        
### Remove a Schedule [DELETE]
+ Response 204